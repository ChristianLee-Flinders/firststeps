generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id              String       @id @default(uuid()) @db.Uuid
  organisation_id String       @db.Uuid
  user_type_id    String       @db.Uuid
  name            String       @db.VarChar
  description     String?
  permissions     Json?
  created_at      DateTime?    @db.Timestamp(6)
  updated_at      DateTime?    @db.Timestamp(6)
  Permission      Permission[]
  Organisation    Organisation @relation(fields: [organisation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  UserType        UserType     @relation(fields: [user_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User            User[]
}

model User {
  id               String       @id @default(uuid()) @db.Uuid
  email            String       @unique @db.VarChar
  auth_provider_id String       @unique @db.VarChar
  user_type_id     String       @db.Uuid
  role_id          String?      @db.Uuid
  organisation_id  String       @db.Uuid
  nursery_id       String?      @db.Uuid
  first_name       String?      @db.VarChar
  last_name        String?      @db.VarChar
  is_active        Boolean?     @default(true)
  created_at       DateTime?    @db.Timestamp(6)
  updated_at       DateTime?    @db.Timestamp(6)
  Parent           Parent[]
  Staff            Staff[]
  Nursery          Nursery?     @relation(fields: [nursery_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Organisation     Organisation @relation(fields: [organisation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Role             Role?        @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  UserType         UserType     @relation(fields: [user_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Child {
  id            String        @id @db.Uuid
  nursery_id    String        @db.Uuid
  first_name    String?       @db.VarChar
  last_name     String?       @db.VarChar
  date_of_birth DateTime?     @db.Date
  gender        String?       @db.VarChar
  medical_info  Json?
  created_at    DateTime?     @db.Timestamp(6)
  updated_at    DateTime?     @db.Timestamp(6)
  Nursery       Nursery       @relation(fields: [nursery_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ChildParent   ChildParent[] @ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ChildParent {
  child_id          String  @db.Uuid
  parent_id         String  @db.Uuid
  relationship_type String? @db.VarChar
  Child             Child   @relation(fields: [child_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Parent            Parent  @relation(fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}

model Nursery {
  id              String       @id @db.Uuid
  organisation_id String       @db.Uuid
  name            String       @db.VarChar
  address         String?
  phone           String?      @db.VarChar
  email           String?      @db.VarChar
  capacity        Int?
  opening_hours   Json?
  created_at      DateTime?    @db.Timestamp(6)
  updated_at      DateTime?    @db.Timestamp(6)
  Child           Child[]
  Organisation    Organisation @relation(fields: [organisation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Staff           Staff[]
  User            User[]
}

model Organisation {
  id                  String    @id @db.Uuid
  name                String    @db.VarChar
  registration_number String?   @db.VarChar
  address             String?
  created_at          DateTime? @db.Timestamp(6)
  updated_at          DateTime? @db.Timestamp(6)
  Nursery             Nursery[]
  Role                Role[]
  User                User[]
}

model Parent {
  id           String        @id @db.Uuid
  user_id      String        @db.Uuid
  phone        String?       @db.VarChar
  relationship String?       @db.VarChar
  created_at   DateTime?     @db.Timestamp(6)
  updated_at   DateTime?     @db.Timestamp(6)
  ChildParent  ChildParent[] @ignore
  User         User          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Permission {
  id          String  @id @db.Uuid
  role_id     String  @db.Uuid
  code        String  @unique @db.VarChar
  description String?
  Role        Role    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Staff {
  id             String    @id @db.Uuid
  user_id        String    @db.Uuid
  nursery_id     String    @db.Uuid
  position       String?   @db.VarChar
  qualifications String?
  start_date     DateTime? @db.Date
  dbs_check      Boolean?
  created_at     DateTime? @db.Timestamp(6)
  updated_at     DateTime? @db.Timestamp(6)
  Nursery        Nursery   @relation(fields: [nursery_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User           User      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model UserType {
  id                String   @id @db.Uuid
  name              String   @unique @db.VarChar
  description       String?
  portal_access     String[] @db.VarChar
  is_system_defined Boolean? @default(true)
  Role              Role[]
  User              User[]
}
